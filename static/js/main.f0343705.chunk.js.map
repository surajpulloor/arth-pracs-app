{"version":3,"sources":["components/MainPage.js","containers/VisibleMainPage.js","actions.js","components/Problem.js","containers/VisibleProblem.js","components/Stopwatch.js","components/Practise.js","containers/VisiblePractise.js","components/Summary.js","containers/VisibleSummary.js","components/App.js","serviceWorker.js","reducers.js","index.js"],"names":["MainPage","props","onSubmit","e","preventDefault","state","num1ValidationFailure","num2ValidationFailure","num2ValidationFailureTo","onSetup","data","history","push","getChoiceValue","setState","prevState","op","target","value","persist","validateNum1Range","num1Range","to","from","num1ValidationMessage","validateNum2Range","num2Range","num2ValidationMessage","num2ValidationMessageTo","sameAsNum1Range","enableCheckbox","this","clearSetupInfo","className","type","min","max","placeholder","id","onChange","Object","assign","v","parseInt","autoFocus","required","style","display","color","disabled","checked","onClick","htmlFor","isNaN","name","Component","withRouter","VisibleMainPage","connect","dispatch","info","addSetupInfo","Problem","setTimer","showResult","interval","setInterval","timeTaken","computeResult","res","num1","num2","onEnter","keyCode","alert","time","minutes","Math","floor","seconds","addProblem","updateResult","nextProps","nextState","stopTimer","clearInterval","toString","length","padStart","icon","faCheck","marginLeft","faTimes","onKeyDown","VisibleProblem","problem","StopWatch","passCurrentTimeToParent","hours","trim","currentTime","calculateTime","stop","Practise","genProblems","random","setupInfo","updateStore","rightAns","totalRightAns","stopStopWatch","stopProblemTimer","window","confirm","addRightAns","addTimer","solvedTime","undefined","clearProblems","VisiblePractise","Summary","problems","margin","marginTop","map","index","VisibleSummary","timer","App","path","component","exact","Boolean","location","hostname","match","arthPracs","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f0343705.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport '../styles/MainPage.css';\r\n\r\n\r\nclass MainPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: {\r\n                num1Range: {\r\n                    from: '',\r\n                    to: '',\r\n                },\r\n                num2Range: {\r\n                    from: '',\r\n                    to: '',\r\n                },\r\n                op: '',\r\n            },\r\n\r\n            sameAsNum1Range: false,\r\n            enableCheckbox: false,\r\n\r\n            num1ValidationFailure: false,\r\n            num1ValidationMessage: '',\r\n            \r\n            num2ValidationFailureTo: false,\r\n            num2ValidationMessageTo: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.clearSetupInfo();\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.num1ValidationFailure || this.state.num2ValidationFailure || this.state.num2ValidationFailureTo)\r\n            return false;\r\n\r\n        // call props.onStart\r\n        this.props.onSetup(this.state.data);\r\n\r\n\r\n        this.props.history.push('/practise');\r\n    }\r\n\r\n    getChoiceValue = (e) => {\r\n        this.setState(prevState => ({\r\n             data: {\r\n                 ...prevState.data,\r\n                 op: e.target.value \r\n             }\r\n        }));\r\n\r\n        e.persist();\r\n    }\r\n\r\n\r\n    validateNum1Range = () => {\r\n        if (this.state.data.num1Range.to !== '' && this.state.data.num1Range.from > this.state.data.num1Range.to)\r\n            this.setState({num1ValidationFailure: true, num1ValidationMessage: \"It's greater than Num1's Range \\\"to\\\". It has to be less\"});\r\n        else\r\n            this.setState({num1ValidationFailure: false, num1ValidationMessage: \"\"});\r\n    }\r\n\r\n\r\n    validateNum2Range = () => {\r\n        if (this.state.data.num2Range.to !== '' && this.state.data.num2Range.from > this.state.data.num2Range.to)\r\n            this.setState({\r\n                num2ValidationFailure: true, \r\n                num2ValidationMessage: \"It's greater than Num2's Range \\\"to\\\". It has to be less\",\r\n\r\n                num2ValidationFailureTo: false,\r\n                num2ValidationMessageTo: ''\r\n            });\r\n       \r\n        else if (\r\n            this.state.data.num1Range.from !== '' &&\r\n            this.state.data.num2Range.from > this.state.data.num1Range.from \r\n        )\r\n            this.setState({\r\n                num2ValidationFailure: true, \r\n                num2ValidationMessage: 'Num2 \"from\" is greater than Num1 \"from\"',\r\n\r\n                num2ValidationFailureTo: false,\r\n                num2ValidationMessageTo: ''\r\n            });\r\n        \r\n        else if (\r\n            this.state.data.num1Range.to !== '' &&\r\n            this.state.data.num2Range.to > this.state.data.num1Range.to \r\n        )\r\n            this.setState({\r\n                num2ValidationFailureTo: true, \r\n                num2ValidationMessageTo: 'Num2 \"to\" is greater than Num1 \"to\"',\r\n\r\n                num2ValidationFailure: false,\r\n                num2ValidationMessage: ''\r\n\r\n            });\r\n        \r\n        else\r\n            this.setState({\r\n                num2ValidationFailure: false,\r\n                num2ValidationMessage: \"\",\r\n\r\n                num2ValidationFailureTo: false,\r\n                num2ValidationMessageTo: ''\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n           <div>\r\n                <h1>Arthimetic Practise</h1>\r\n\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Num1 Range</label>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-md-3\">\r\n                                <input type=\"number\" min=\"1\" max=\"10000\" \r\n                                        placeholder=\"From\" value={this.state.data.num1Range.from} \r\n                                        id=\"num1From\" onChange={ \r\n                                            e => {\r\n                                                \r\n                                                this.setState(prevState => { \r\n                                                    const num1Range = Object.assign({}, prevState.data.num1Range);\r\n                                                    const v = parseInt(e.target.value);\r\n                                                    num1Range.from = v ? v : \"\";\r\n\r\n                                                    const num2Range = Object.assign({}, prevState.data.num2Range);\r\n                                                    if (prevState.sameAsNum1Range)\r\n                                                        num2Range.from = num1Range.from;\r\n\r\n                                                    return {\r\n                                                        data: {\r\n                                                            ...prevState.data,\r\n                                                            num1Range,\r\n                                                            num2Range\r\n                                                        },\r\n                                                        sameAsNum1Range: v || prevState.data.num1Range.to !== '' ? prevState.sameAsNum1Range : false,\r\n                                                        enableCheckbox: v || prevState.data.num1Range.to !== '' ? true : false\r\n                                                    };\r\n                                                }, this.validateNum1Range);\r\n\r\n                                                e.persist();\r\n                                            }\r\n                                        }\r\n                                        className={this.state.num1ValidationFailure ? \"form-control is-invalid\" : \"form-control\"} \r\n                                        autoFocus\r\n                                        required\r\n                                />\r\n                                \r\n                                <div className=\"invalid-feedback\" style={{display: this.state.num1ValidationFailure ? 'block' : 'none'}}>\r\n                                    {this.state.num1ValidationMessage}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-3\">\r\n                                <input type=\"number\" min=\"1\" max=\"10000\" \r\n                                        placeholder=\"To\" value={this.state.data.num1Range.to} \r\n                                        id=\"num1To\" onChange={ \r\n                                            e => {\r\n                                                \r\n                                                this.setState(prevState => { \r\n\r\n                                                    const v = parseInt(e.target.value);\r\n\r\n                                                    const to = v ? v : '';\r\n\r\n\r\n                                                    return {\r\n                                                        data: {\r\n                                                            ...prevState.data,\r\n                                                            num1Range: {\r\n                                                                ...prevState.data.num1Range,\r\n                                                                to\r\n                                                            },\r\n                                                            num2Range: {\r\n                                                                ...prevState.data.num2Range,\r\n                                                                to: prevState.sameAsNum1Range ? to : prevState.data.num2Range.to\r\n                                                            }\r\n                                                        },\r\n                                                        sameAsNum1Range: v || prevState.data.num1Range.from !== '' ? prevState.sameAsNum1Range : false,\r\n                                                        enableCheckbox: v || prevState.data.num1Range.from !== '' ? true : false\r\n                                                    }\r\n                                                    \r\n                                                    \r\n                                                }, this.validateNum1Range);\r\n\r\n                                                e.persist();\r\n                                            }\r\n                                        }\r\n                                        className=\"form-control\" \r\n                                        required\r\n                                />\r\n                            </div>\r\n                        \r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n\r\n                        <div className=\"num2RangeLabel\">\r\n                            <span className=\"label\">Num2 Range</span>\r\n                            \r\n                            <span className=\"leftParen\">\r\n                            (\r\n                            </span>\r\n\r\n                            <div className=\"custom-control custom-checkbox sameRangeCheckbox\" style={{ color: this.state.enableCheckbox ? 'black' : 'grey'}}>\r\n                                <input \r\n                                    type=\"checkbox\" \r\n                                    className=\"custom-control-input\" \r\n                                    id=\"toNum1Range\"\r\n                                    disabled={!this.state.enableCheckbox}\r\n                                    checked={this.state.sameAsNum1Range}\r\n                                    onClick={ \r\n                                        e => {\r\n                                            e.target.checked \r\n\r\n                                            ? this.setState(prevState => ({\r\n                                                data: {\r\n                                                    ...prevState.data,\r\n                                                    num2Range: {\r\n                                                        to: prevState.data.num1Range.to,\r\n                                                        from: prevState.data.num1Range.from\r\n                                                    }\r\n                                                },\r\n                                                sameAsNum1Range: true\r\n                                            }))\r\n                                            :\r\n                                            this.setState(prevState => ({\r\n                                                data: {\r\n                                                    ...prevState.data,\r\n                                                    num2Range: {\r\n                                                        to: \"\",\r\n                                                        from: \"\"\r\n                                                    }\r\n                                                },\r\n                                                sameAsNum1Range: false\r\n                                                \r\n                                            }))\r\n\r\n                                        }\r\n                                    } \r\n                                />\r\n                                <label className=\"custom-control-label\" htmlFor=\"toNum1Range\">Same as Num1 range</label>\r\n                            </div>\r\n\r\n                            <span className=\"rightParen\">\r\n                            )\r\n                            </span>\r\n                        </div>\r\n                        \r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-md-3\">\r\n                                <input type=\"number\" min=\"1\" max=\"10000\" \r\n                                        placeholder=\"From\" value={this.state.data.num2Range.from} \r\n                                        id=\"num2From\" onChange={ \r\n                                            e => {\r\n                                                \r\n                                                this.setState(prevState => { \r\n                                                    const num2Range = Object.assign({}, this.state.data.num2Range);\r\n                                                    const v = parseInt(e.target.value);\r\n                                                    num2Range.from = v ? v : '';\r\n\r\n                                                    return {\r\n                                                        data: {\r\n                                                            ...prevState.data,\r\n                                                            num2Range\r\n                                                        },\r\n                                                        sameAsNum1Range: !isNaN(v) && v === prevState.data.num1Range.from && \r\n                                                                    prevState.data.num1Range.to === prevState.data.num2Range.to\r\n                                                    };\r\n                                                }, this.validateNum2Range);\r\n\r\n                                                e.persist();\r\n                                            }\r\n                                        }\r\n                                        className={this.state.num2ValidationFailure ? \"form-control is-invalid\" : \"form-control\"} \r\n                                        required\r\n                                />\r\n                                \r\n                                <div className=\"invalid-feedback\" style={{display: this.state.num2ValidationFailure ? 'block' : 'none'}}>\r\n                                    {this.state.num2ValidationMessage}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-3\">\r\n                                <input type=\"number\" min=\"1\" max=\"10000\" \r\n                                        placeholder=\"To\" value={this.state.data.num2Range.to} \r\n                                        id=\"num2To\" onChange={ \r\n                                            e => {\r\n                                                \r\n                                                this.setState(prevState => { \r\n\r\n                                                    const v = parseInt(e.target.value);\r\n\r\n                                                    return {\r\n                                                        data: {\r\n                                                            ...prevState.data,\r\n                                                            num2Range: {\r\n                                                                ...prevState.data.num2Range,\r\n                                                                to: v ? v : ''\r\n                                                            }\r\n                                                        },\r\n                                                        sameAsNum1Range: !isNaN(v) && v === prevState.data.num1Range.to && \r\n                                                                        prevState.data.num1Range.from === prevState.data.num2Range.from\r\n                                                    }\r\n                                                    \r\n                                                    \r\n                                                }, this.validateNum2Range);\r\n\r\n                                                e.persist();\r\n                                            }\r\n                                        }\r\n                                        className={this.state.num2ValidationFailureTo ? \"form-control is-invalid\" : \"form-control\"}\r\n                                        required\r\n                                />\r\n\r\n                                <div className=\"invalid-feedback\" style={{display: this.state.num2ValidationFailureTo ? 'block' : 'none'}}>\r\n                                    {this.state.num2ValidationMessageTo}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"radio\" \r\n                            name=\"operator\" id=\"add\" \r\n                            value=\"+\" checked={ this.state.data.op === '+' }\r\n                            onChange={this.getChoiceValue} \r\n                            required\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"add\">\r\n                            +\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"radio\" \r\n                            name=\"operator\" id=\"subtract\" \r\n                            value=\"-\" checked={ this.state.data.op === '-' }\r\n                            onChange={this.getChoiceValue} \r\n                            required\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"subtract\">\r\n                            -\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"radio\" \r\n                            name=\"operator\" id=\"multiply\" \r\n                            value=\"*\" checked={ this.state.data.op === '*' }\r\n                            onChange={this.getChoiceValue} \r\n                            required\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"multiply\">\r\n                            *\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" type=\"radio\" \r\n                            name=\"operator\" id=\"divide\" \r\n                            value=\"/\" checked={ this.state.data.op === '/' }\r\n                            onChange={this.getChoiceValue} \r\n                            required\r\n                        />\r\n                        <label className=\"form-check-label\" htmlFor=\"divide\">\r\n                            /\r\n                        </label>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Start</button>\r\n                </form>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(MainPage);","import { connect } from 'react-redux';\r\nimport { addSetupInfo, clearSetupInfo } from '../actions';\r\nimport MainPage from '../components/MainPage';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSetup: info => {\r\n            dispatch(addSetupInfo(info));\r\n        },\r\n\r\n        clearSetupInfo: () => {\r\n            dispatch(clearSetupInfo());\r\n        }\r\n    }\r\n}\r\n\r\nconst VisibleMainPage = connect(mapStateToProps, mapDispatchToProps)(MainPage);\r\n\r\nexport default VisibleMainPage;","export const ADD_SETUP_INFO = 'ADD_SETUP_INFO';\r\nexport const ADD_PROBLEM = 'ADD_PROBLEM';\r\nexport const ADD_RIGHTANS = 'ADD_RIGHTANS';\r\nexport const ADD_TIMER = 'ADD_TIMER';\r\n\r\nexport const CLEAR_SETUP_INFO = 'CLEAR_SETUP_INFO';\r\nexport const CLEAR_PROBLEMS = 'CLEAR_PROBLEMS';\r\n\r\nexport function addSetupInfo(info) {\r\n    return {\r\n        type: ADD_SETUP_INFO,\r\n        info\r\n    }\r\n}\r\n\r\nexport function addProblem(problem) {\r\n    return {\r\n        type: ADD_PROBLEM,\r\n        problem\r\n    }\r\n}\r\n\r\nexport function addRightAns(rightAns) {\r\n    return {\r\n        type: ADD_RIGHTANS,\r\n        rightAns\r\n    }\r\n}\r\n\r\nexport function addTimer(time) {\r\n    return {\r\n        type: ADD_TIMER,\r\n        time\r\n    }\r\n}\r\n\r\nexport function clearSetupInfo() {\r\n    return { type: CLEAR_SETUP_INFO }\r\n}\r\n\r\nexport function clearProblems() {\r\n    return { type: CLEAR_PROBLEMS }\r\n}","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Problem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            timeTaken: 1,\r\n            res: 0\r\n        };\r\n    }\r\n\r\n    setTimer = () => {\r\n        if (!this.props.showResult) {\r\n\r\n            this.interval = setInterval(() => this.setState((state, props) => { \r\n                return { timeTaken: state.timeTaken + 1 } \r\n            }), 1000);\r\n\r\n        }\r\n        \r\n        this.computeResult();\r\n\r\n    }\r\n\r\n    computeResult = () => {\r\n        let res;\r\n\r\n        switch (this.props.op) {\r\n            case '+':\r\n                res = this.props.num1 + this.props.num2;\r\n                break;\r\n            case '-':\r\n                res = this.props.num1 - this.props.num2;\r\n                break;\r\n            case '*':\r\n                res = this.props.num1 * this.props.num2;\r\n                break;\r\n            case '/':\r\n                res = this.props.num1 / this.props.num2;\r\n                break;\r\n        }\r\n\r\n        this.setState({ res });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTimer();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        if (\r\n            this.props.num1 === nextProps.num1 && \r\n            this.props.num2 === nextProps.num2 &&\r\n            this.props.stopTimer === nextProps.stopTimer\r\n        )\r\n            return false;\r\n\r\n        if (this.interval && !this.props.stopTimer) {\r\n            clearInterval(this.interval);\r\n            this.setState({timeTaken: 1}, this.setTimer);\r\n        }\r\n        \r\n        if (this.props.stopTimer) {\r\n            clearInterval(this.interval);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.interval)\r\n            clearInterval(this.interval);\r\n    }\r\n\r\n    onEnter = (e) => {\r\n        if (e.keyCode === 13) {\r\n\r\n            if (e.target.value === '') {\r\n                alert(\"Please enter a number!\");\r\n                return;\r\n            }\r\n            \r\n            let timeTaken = `${this.state.timeTaken}s`;\r\n\r\n            if (this.state.timeTaken >= 60) {\r\n                let time = this.state.timeTaken / 60;\r\n\r\n                let minutes = Math.floor(time);\r\n                let seconds = Math.floor((time - minutes) * 100);\r\n\r\n                timeTaken = `${minutes}m ${seconds}s`;\r\n\r\n            }\r\n\r\n            this.props.addProblem({\r\n                num1: this.props.num1, \r\n                num2: this.props.num2,\r\n                op: this.props.op,\r\n                res: parseInt(e.target.value), \r\n                timeTaken,\r\n            });\r\n            \r\n            this.props.updateResult(this.state.res === parseInt(e.target.value));\r\n\r\n            e.target.value = \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"problem\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <h3>{this.props.id}.</h3>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-1\">\r\n                    </div>\r\n                    <div className=\"col-md-5\">\r\n                        <h4>\r\n                            {\r\n                                this.props.num1.toString().length < this.props.num2.toString().length\r\n                                ? this.props.num1.toString().padStart(this.props.num2.toString().length, '0')\r\n                                : this.props.num1.toString()\r\n                            }\r\n                        </h4>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-1\">\r\n                        <h4>{this.props.op}</h4>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-5\">\r\n                        <h4>\r\n                            {\r\n                                this.props.num2.toString().length < this.props.num1.toString().length\r\n                                ? this.props.num2.toString().padStart(this.props.num1.toString().length, '0')\r\n                                : this.props.num2.toString()\r\n                            }    \r\n                        </h4>\r\n                        <hr />\r\n                        \r\n                        { \r\n                            this.props.showResult \r\n                            ?   <h4>\r\n                                    <span>{ this.props.res }</span>\r\n                                    { \r\n                                        this.props.res === this.state.res \r\n                                        ? <FontAwesomeIcon icon={faCheck} style={{ color: 'green', marginLeft: '4px' }} /> \r\n                                        : <FontAwesomeIcon icon={faTimes} style={{ color: 'red', marginLeft: '4px' }} />\r\n                                    }\r\n                                    \r\n                                    { \r\n                                        this.props.res !== this.state.res\r\n                                        ?\r\n                                        <div style={{ display: 'inline-block', marginLeft: '8px' }}>\r\n                                            <span>{ this.state.res }</span>\r\n                                            <FontAwesomeIcon icon={faCheck} style={{ color: 'green', marginLeft: '4px' }} />\r\n                                        </div> \r\n                                        :\r\n                                        ''\r\n                                        \r\n                                    }\r\n                                    <span className=\"float-right\">{ this.props.timeTaken }</span>\r\n                                </h4>\r\n                            : <div>\r\n                                <input type=\"number\" placeholder=\"Please enter your Ans.\" className=\"form-control\" onKeyDown={this.onEnter} autoFocus />\r\n                            </div>\r\n                        }\r\n\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Problem;","import { connect } from 'react-redux';\r\nimport { addProblem } from '../actions';\r\nimport Problem from '../components/Problem';\r\n\r\nconst mapStateToProps = state => {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addProblem: problem => {\r\n            dispatch(addProblem(problem))\r\n        }\r\n    }\r\n}\r\n\r\nconst VisibleProblem = connect(mapStateToProps, mapDispatchToProps)(Problem);\r\n\r\nexport default VisibleProblem;","import React, { Component } from 'react';\r\n\r\nclass StopWatch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            seconds: 0,\r\n            minutes: 0,\r\n            hours: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(this.calculateTime, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        if (nextProps.stop === this.props.stop)\r\n            return false;\r\n\r\n        if (this.props.stop)\r\n            clearInterval(this.interval);\r\n        else {\r\n            this.calculateTime();\r\n            this.interval = setInterval(this.calculateTime, 1000);\r\n        }\r\n    }\r\n\r\n\r\n    passCurrentTimeToParent = () => {\r\n        const seconds = this.state.seconds > 0 ? this.state.seconds + 's' : '';\r\n        const minutes = this.state.minutes > 0 ? this.state.minutes + 'm' : '';\r\n        const hours = this.state.hours > 0 ? this.state.hours + 'h' : '';\r\n\r\n        const time = `${hours} ${minutes} ${seconds}`.trim();\r\n\r\n        this.props.currentTime(time);\r\n    }\r\n\r\n    calculateTime = () => {\r\n\r\n        if (this.state.seconds === 60) {\r\n            this.setState((state, props) => { \r\n                return { \r\n                    seconds: 0, \r\n                    minutes: state.minutes + 1 \r\n                } \r\n            }, () => {\r\n                if (this.state.minutes === 60) {\r\n                    this.setState((state, props) => {\r\n                        return {\r\n                            minutes: 0,\r\n                            hours: state.hours + 1\r\n                        }\r\n                    }, () => {\r\n                        this.passCurrentTimeToParent();\r\n                    });\r\n                }\r\n\r\n                this.passCurrentTimeToParent();\r\n            });\r\n        } else {\r\n            this.setState((state, props) => {\r\n                return {\r\n                    seconds: state.seconds + 1\r\n                }\r\n            }, () => {\r\n                this.passCurrentTimeToParent();\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h3>\r\n                {(this.state.hours < 10 ? '0' : '') + this.state.hours}:\r\n                {(this.state.minutes < 10 ? '0' : '') + this.state.minutes}:\r\n                {(this.state.seconds < 10 ? '0' : '') + this.state.seconds}\r\n            </h3>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StopWatch;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport VisibleProblem from '../containers/VisibleProblem';\r\nimport StopWatch from './Stopwatch';\r\n\r\nclass Practise extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            num1: 0,\r\n            num2: 0,\r\n            id: 0,\r\n\r\n            stopStopWatch: false,\r\n            stopProblemTimer: false,\r\n\r\n            solvedTime: '',\r\n            totalRightAns: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (\r\n            this.props.setupInfo.num1Range !== undefined && \r\n            this.props.setupInfo.num2Range !== undefined && \r\n            this.props.setupInfo.op !== undefined\r\n        ) {\r\n            this.props.clearProblems();\r\n            this.genProblems();\r\n        }\r\n    }\r\n\r\n    genProblems = () => {\r\n        let num1 = Math.floor(\r\n            Math.random() * (\r\n                this.props.setupInfo.num1Range.to - this.props.setupInfo.num1Range.from\r\n                )\r\n            ) + this.props.setupInfo.num1Range.from;\r\n\r\n        \r\n        let num2 = 0;\r\n\r\n        do {\r\n            num2 =  Math.floor(\r\n                Math.random() * (\r\n                    this.props.setupInfo.num2Range.to - this.props.setupInfo.num2Range.from\r\n                    )\r\n                ) + this.props.setupInfo.num2Range.from;\r\n\r\n        } while (num1 <= num2);\r\n        \r\n\r\n        this.setState((state, props) => {\r\n            return {\r\n                num1,\r\n                num2,\r\n                id: state.id + 1,\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    updateStore = (rightAns) => {\r\n        // push into the store\r\n        this.setState((state, props) => {\r\n\r\n            if (rightAns) {\r\n                return {\r\n                    totalRightAns: state.totalRightAns + 1\r\n                };\r\n            }\r\n\r\n        });\r\n\r\n        this.genProblems();\r\n    }\r\n\r\n    stop = () => {\r\n\r\n        this.setState({ stopStopWatch: true, stopProblemTimer: true });\r\n\r\n        if (window.confirm(\"Do you want to stop?\")) {\r\n            // push rightAns and solvedTime\r\n            this.props.addRightAns(this.state.totalRightAns);\r\n            this.props.addTimer(this.state.solvedTime);\r\n            \r\n            this.props.history.push('/summary');\r\n        } else {\r\n            this.setState({ stopStopWatch: false, stopProblemTimer: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                   ( \r\n                       this.props.setupInfo.num1Range !== undefined && \r\n                       this.props.setupInfo.num2Range !== undefined && \r\n                       this.props.setupInfo.op !== undefined\r\n                    )\r\n                    ?\r\n                    <div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <h1>Practise problems</h1>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <StopWatch stop={this.state.stopStopWatch} currentTime={(time) => this.setState({solvedTime: time})} />\r\n                            </div>\r\n                        </div>\r\n                        <VisibleProblem num1={this.state.num1} num2={this.state.num2}\r\n                                op={this.props.setupInfo.op} id={this.state.id} \r\n                                showResult={false} updateResult={this.updateStore}\r\n                                stopTimer={this.state.stopProblemTimer} />\r\n\r\n                        <button className=\"btn btn-primary\" onClick={this.stop}>Stop</button>\r\n                    </div>\r\n                    :\r\n                    <div> \r\n                        <h1>Sorry, the app isn't set properly.</h1>\r\n                        <small>\r\n                            What's the 1<sup>st</sup> and 2<sup>nd</sup> number's length.\r\n                            <div>\r\n                                What's the operator?\r\n                            </div>\r\n                        </small>\r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(Practise);","import { connect } from 'react-redux';\r\nimport { addTimer, addRightAns, clearProblems } from '../actions';\r\nimport Practise from '../components/Practise';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        setupInfo: state.info\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n        addRightAns: rightAns => {\r\n            dispatch(addRightAns(rightAns));\r\n        },\r\n\r\n        addTimer: time => {\r\n            dispatch(addTimer(time));\r\n        },\r\n\r\n        clearProblems: () => {\r\n            dispatch(clearProblems());\r\n        }\r\n    }\r\n}\r\n\r\nconst VisiblePractise = connect(mapStateToProps, mapDispatchToProps)(Practise);\r\n\r\nexport default VisiblePractise;","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Problem from './Problem';\r\n\r\nconst Summary = (props) => (\r\n    <div>\r\n        {\r\n            props.problems.length !== 0\r\n            ?\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\r\n\r\n                    <h1 className=\"navbar-brand\" style={{ margin: '0'}}>Summary</h1>\r\n\r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <h5 className=\"float-right\" style={{ margin: '0 0 0 60px'}}>Time Taken: {props.timeTaken}</h5>\r\n                        <h5 className=\"float-right\" style={{ margin: '0 0 0 60px'}}>Total Right Ans: {props.rightAns} / {props.problems.length}</h5>\r\n                    </div>\r\n\r\n                    <form className=\"form-inline\">\r\n                        \r\n                        <Link className=\"btn btn-primary my-2 my-sm-0\" to=\"/practise\">Start Again</Link>\r\n                        <Link className=\"btn btn-primary my-2 my-sm-0\" style={{ marginLeft: '4px' }} to=\"/\">Setup</Link>\r\n                    </form>\r\n\r\n                \r\n                </nav>\r\n\r\n                <div style={{ marginTop: '60px' }}>\r\n                    {\r\n                        props.problems.map((problem, index) =>  \r\n                            <Problem num1={problem.num1} num2={problem.num2}\r\n                                    op={problem.op} res={problem.res} timeTaken={problem.timeTaken}\r\n                                    id={index + 1} showResult={true} />\r\n                        )\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            :\r\n            <div> \r\n                <h1>Sorry, the app isn't set properly.</h1>\r\n                <small>There aren't any problems.</small>\r\n            </div>\r\n        }\r\n    </div>\r\n)\r\n\r\nexport default Summary;","import { connect } from 'react-redux';\r\nimport Summary from '../components/Summary';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        problems: state.problems,\r\n        timeTaken: state.timer,\r\n        rightAns: state.rightAns\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {}\r\n}\r\n\r\nconst VisibleSummary = connect(mapStateToProps, mapDispatchToProps)(Summary);\r\n\r\nexport default VisibleSummary;","import React from 'react';\nimport VisibleMainPage from '../containers/VisibleMainPage';\nimport VisiblePractise from '../containers/VisiblePractise';\nimport VisibleSummary from '../containers/VisibleSummary';\n\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <main className=\"container\">\n      <Switch>\n        <Route path=\"/\" component={VisibleMainPage} exact />\n        <Route path=\"/practise\" component={VisiblePractise} />\n        <Route path=\"/summary\" component={VisibleSummary} />\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nimport { \r\n    ADD_PROBLEM,\r\n    ADD_RIGHTANS,\r\n    ADD_SETUP_INFO,\r\n    ADD_TIMER,\r\n    CLEAR_PROBLEMS,\r\n    CLEAR_SETUP_INFO\r\n} from './actions';\r\n\r\nfunction info(state = {}, action) {\r\n    switch (action.type) {\r\n        case ADD_SETUP_INFO:\r\n            return action.info;\r\n        case CLEAR_SETUP_INFO:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction problems(state = [], action) {\r\n    switch (action.type) {\r\n        case ADD_PROBLEM:\r\n            return [\r\n                ...state,\r\n                action.problem\r\n            ];\r\n        case CLEAR_PROBLEMS:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction rightAns(state = 0, action) {\r\n    switch (action.type) {\r\n        case ADD_RIGHTANS:\r\n            return action.rightAns;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction timer(state = '0s', action) {\r\n    switch (action.type) {\r\n        case ADD_TIMER:\r\n            return action.time;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst arthPracs = combineReducers({\r\n    info,\r\n    problems,\r\n    rightAns,\r\n    timer\r\n});\r\n\r\nexport default arthPracs;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { createStore } from 'redux';\nimport arthPracs from './reducers';\n\nimport { Provider } from 'react-redux';\n\nconst store = createStore(arthPracs);\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}